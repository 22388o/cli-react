// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`command specified in root config should overwrite command in "react-native-foo" and "react-native-bar" packages 1`] = `
{
  "func": [Function],
  "name": "foo-command",
  "options": [
    {
      "description": "Custom option",
      "name": "--option",
    },
  ],
}
`;

exports[`should apply build types from dependency config 1`] = `
{
  "name": "react-native-test",
  "platforms": {
    "android": null,
    "ios": {
      "configurations": [
        "debug",
      ],
      "podspecPath": "<<REPLACED>>/node_modules/react-native-test/ReactNativeTest.podspec",
      "scriptPhases": [],
      "version": "unresolved",
    },
  },
  "root": "<<REPLACED>>/node_modules/react-native-test",
}
`;

exports[`should have a valid structure by default 1`] = `
{
  "commands": [],
  "dependencies": {},
  "healthChecks": [],
  "platforms": {},
  "project": {},
  "reactNativePath": "<<REPLACED>>",
  "reactNativeVersion": "unknown",
  "root": "<<REPLACED>>",
}
`;

exports[`should load commands from "react-native-foo" and "react-native-bar" packages 1`] = `
[
  {
    "func": [Function],
    "name": "bar-command",
  },
  {
    "func": [Function],
    "name": "foo-command",
  },
]
`;

exports[`should merge project configuration with default values: snapshoting \`react-native-test\` config 1`] = `
{
  "name": "react-native-test",
  "platforms": {
    "android": null,
    "ios": {
      "configurations": [],
      "podspecPath": "<<REPLACED>>/node_modules/react-native-test/ReactNativeTest.podspec",
      "scriptPhases": [
        {
          "name": "abc",
          "path": "./phase.sh",
        },
      ],
      "version": "unresolved",
    },
  },
  "root": "<<REPLACED>>/node_modules/react-native-test",
}
`;

exports[`should not skip packages that have invalid configuration (to avoid breaking users): dependencies config 1`] = `
{
  "react-native": {
    "name": "react-native",
    "platforms": {},
    "root": "<<REPLACED>>/node_modules/react-native",
  },
}
`;

exports[`should not skip packages that have invalid configuration (to avoid breaking users): logged warning 1`] = `"warn Package react-native contains invalid configuration: "dependency.invalidProperty" is not allowed. Please verify it's properly linked using "npx react-native config" command and contact the package maintainers about this."`;

exports[`should read a config of a dependency and use it to load other settings 1`] = `
{
  "name": "react-native-test",
  "platforms": {
    "android": null,
    "ios": {
      "configurations": [],
      "podspecPath": "<<REPLACED>>/node_modules/react-native-test/ReactNativeTest.podspec",
      "scriptPhases": [
        {
          "dependency_file": "/path/to/dependency/file",
          "execution_position": "after_compile",
          "input_file_lists": [
            "input_file_1",
            "input_file_2",
          ],
          "input_files": [
            "input_file",
          ],
          "name": "[TEST] Some Configuration",
          "output_file_lists": [
            "output_file_1",
            "output_file_2",
          ],
          "output_files": [
            "output_file",
          ],
          "path": "./customLocation/custom.sh",
          "shell_path": "some/shell/path/bash",
          "show_env_vars_in_log": false,
        },
      ],
      "version": "unresolved",
    },
  },
  "root": "<<REPLACED>>/node_modules/react-native-test",
}
`;

exports[`should return dependencies from package.json 1`] = `
{
  "react-native": {
    "name": "react-native",
    "platforms": {
      "android": null,
      "ios": null,
    },
    "root": "<<REPLACED>>/node_modules/react-native",
  },
  "react-native-test": {
    "name": "react-native-test",
    "platforms": {
      "android": null,
      "ios": {
        "configurations": [],
        "podspecPath": "<<REPLACED>>/node_modules/react-native-test/ReactNativeTest.podspec",
        "scriptPhases": [],
        "version": "unresolved",
      },
    },
    "root": "<<REPLACED>>/node_modules/react-native-test",
  },
}
`;

exports[`supports dependencies from user configuration with custom build type 1`] = `
{
  "name": "react-native-test",
  "platforms": {
    "android": null,
    "ios": {
      "configurations": [
        "custom_build_type",
      ],
      "podspecPath": "<<REPLACED>>/node_modules/react-native-test/ReactNativeTest.podspec",
      "scriptPhases": [],
      "version": "unresolved",
    },
  },
  "root": "<<REPLACED>>/node_modules/react-native-test",
}
`;

exports[`supports disabling dependency for ios platform 1`] = `
{
  "name": "react-native-test",
  "platforms": {
    "android": null,
    "ios": null,
  },
  "root": "<<REPLACED>>/node_modules/react-native-test",
}
`;
